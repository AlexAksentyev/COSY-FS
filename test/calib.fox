INCLUDE 'bin/support/BNL/decoh_optim';

PROCEDURE WRITECOL OU VEC;
  VARIABLE NVEC 1; VARIABLE I 1;
  NVEC := LENGTH(VEC);
  LOOP I 1 NVEC;
    WRITE OU VEC|I;
  ENDLOOP;
ENDPROCEDURE;
PROCEDURE WRITETBL OU ARR NARR MARKER;
  VARIABLE NVEC 1; VARIABLE I 1; VARIABLE J 1;
  VARIABLE ROW 101;
  NVEC := LENGTH(ARR(1));
  LOOP I 1 NVEC;
    ROW := ARR(1)|I;
    LOOP J 2 NARR; ROW := ROW&(ARR(J)|I); ENDLOOP;
    WRITE OU MARKER&' '&MRK(I-1)&' '&FORM(ROW);
  ENDLOOP;
ENDPROCEDURE;

PROCEDURE SETRAYS;
  VARIABLE I 1; VARIABLE J 1;
  VARIABLE X 1; VARIABLE D 1;
  VARIABLE S0 1;
  CR;
  LOOP I 1 11;
    J := I-6;
    X := 1E-3*J;
    D := 1E-4*J;
    S0 := .1*J;
    SR X 0 0 0 0 0 0 0 0; SSR 0 0 1;
    SR 0 0 X 0 0 0 0 0 0; SSR 0 0 1;
    SR 0 0 0 0 0 D 0 0 0; SSR 0 0 1;
    SR 0 0 0 0 0 0 0 0 0; SSR S0 0 SQRT(1 - SQR(S0));
    SR 0 0 0 0 0 0 0 0 0; SSR 0 S0 SQRT(1 - SQR(S0));
  ENDLOOP;
ENDPROCEDURE;

PROCEDURE STEERER I;
  VARIABLE ANGLE 1;
  ANGLE := 90;
  RSY -ANGLE; CMSI I 1E6 5E-2 .1; RSY ANGLE;
ENDPROCEDURE;

PROCEDURE RUN;
  VARIABLE WHERE 500; VARIABLE MARKER 100;
  VARIABLE GSX 1; VARIABLE GSY 1; VARIABLE GSD 1;
  VARIABLE TILT 1 101; VARIABLE SIGMA 1 101; VARIABLE TILTS 32;
  VARIABLE I 1; VARIABLE J 1; VARIABLE K 1;
  VARIABLE MU 4000; VARIABLE NBAR 4000 3; VARIABLE MUARR 4000 4;

 { DATA OUTPUT DIRECTORY }
  WRITE 6 '';
  WHERE := 'data/calib/TEST/';
    OS 'mkdir -p '&WHERE;  WRITE 6 'WRITING TO: '&WHERE;
    OS 'rm -v -f '&WHERE&'*';
    OS 'mkdir -p img/BNL/';
  GROUTF 'img/BNL/TR' 1;
  MARKER :='';

  { SIMULATION PARAMETERS }
  OV 3 3 0;
  RP 270.0092 1876.5592/AMUMEV 1;
  RPS 1 -.142987;

  LOOP I 1 101;
    TILT(I)  := 1E-6/DEGRAD*(I-6);
    SIGMA(I) := 1E-4/DEGRAD*(I-1);
  ENDLOOP;

  {SIMULATION}

  { OPTIMIZE_SEXTUPOLES GSX GSY GSD WHERE MARKER; }
  GSX := 5.79e-3;
  GSY := -5.762e-4;
  GSD := -1.366605e-2;

  OPENF 7 FILENAME(WHERE,  'STUNE',   'CW')  'REPLACE';
  OPENF 8 FILENAME(WHERE,  'STUNE',  'CCW')  'REPLACE';
  OPENF 9 FILENAME(WHERE,  'STUNEE',  'CW')  'REPLACE';
  OPENF 10 FILENAME(WHERE, 'STUNEE', 'CCW')  'REPLACE';

  SETRAYS;
  OPENF 100 WHERE&'PRAY.dat'  'REPLACE';
  OPENF 101 WHERE&'PSPI.dat'  'REPLACE';
  PRAY 100; PSPI 101;
  CLOSEF 100; CLOSEF 101;

  TILTS := ZEROS(32);

  LOOP I 1 20;
    LOOP J 2 2;
      MARKER := 'X'&MRK(I-1)&'S'&MRK(J-1);
      WRITE 6 MARKER;
      TILTS := VEGAUSS(0, SIGMA(J), 32, WHERE&'GAUSS'&MARKER);
      { VELSET TILTS 6 TILT(I); }
      { OPENF 100 WHERE&'GAUSS'&MARKER&'.in' 'REPLACE'; }
      { WRITECOL 100 TILTS; CLOSEF 100; }
      MARKER := MRK(I-1)&' '&MRK(J-1);
      {forward direction spin tune}
      CW_SETUP GSX GSY GSD TILTS;
      TSS MU NBAR 0;
      MUARR(1) := MU; LOOP K 1 3; MUARR(K+1) := NBAR(K); ENDLOOP;
      WRITE 6 MARKER&' '&GET0(MU, NBAR);
      WRITE 7 MARKER&' '&GET0(MU, NBAR);
      SETRAYS;
      POLVAL 1 MUARR 4 RAY 6 MUARR 4;
      WRITETBL 9 MUARR 4 MARKER;
      {reverse direction spin tune}
      { MR MAP MAP; SMR SPNR SPNR; }
      CCW_SETUP GSX GSY GSD VEREV(TILTS);
      TSS MU NBAR 0;
      MUARR(1) := MU; LOOP K 1 3; MUARR(K+1) := NBAR(K); ENDLOOP;
      WRITE 6 MARKER&' '&GET0(MU, NBAR);
      WRITE 8 MARKER&' '&GET0(MU, NBAR);
      SETRAYS;
      POLVAL 1 MUARR 4 RAY 6 MUARR 4;
      WRITETBL 10 MUARR 4 MARKER;
    ENDLOOP;
  ENDLOOP;
  
  CLOSEF 7; CLOSEF 8; CLOSEF 9; CLOSEF 10;
ENDPROCEDURE; {RUN}

RUN; END;
